lab:
Note: svc is short name for service

kubectl get svc                         # list all running services in current active namespace
kubectl get svc -n kube-system          # list all running services in specified namespace
kubectl get svc --all-namespaces        # list all running services in all namespaces available
kubectl get svc -o wide                 # list all running services in current active namespace wider output
kubectl get svc --show-labels           # list services with labels
kubectl get svc -l env=prod             # list services with matching labels


kubectl describe svc <svcname>              # detailed output about a service in current namespace
kubectl describe svc <svcname> -n namespace # detailed output about a service in current namespace
kubectl describe svc <svcname> -o wide      # detailed output about a service wider output
kubectl describe svc <svcname> -o yaml      # detailed manifest file from apiserver yaml format
kubectl describe svc <svcname> -o json      # detailed manifest file from apiserver json format

kubectl label svc <svcname> env=prod        # add label to svc
kubectl label svc <svcname> env-            # remove a label

kubectl delete svc <svcname>                    # delete a svc in current active namespace
kubectl delete svc <svcname> -n <my-namespace>  # delete a svc in specified namespace
kubectl delete svc -l env=test                  # delete svc matching labels
kubectl delete svc --all                        # delete all svc

============================================================================================================

kubectl apply -f ./my-manifest.yaml            # create resource(s)
kubectl apply -f ./my1.yaml -f ./my2.yaml      # create from multiple files
kubectl apply -f ./dir                         # create resource(s) in all manifest files in dir
kubectl apply -f https://git.io/vPieo          # create resource(s) from url